@page "/convex_hull_output"
@using Problem.FenceTransport
@using ProjektZaliczeniowy_AiSD2.States
@inherits ProblemOutputBase<ConvexHullOutput>

@inject NavigationManager Navigation

<div class="convex_hull">
    <WoodenTitle>Indeksy otoczki wypukłej:</WoodenTitle>

    <div class="board">
        <div class="table_wrapper">
            <table>
                <thead>
                <tr>
                    <th>Indeks</th>
                </tr>
                </thead>
                <tbody>
                    @if (_outputData is not null && _outputData.HullIndexes is not null)
                    {
                        @foreach (var i in _outputData.HullIndexes)
                        {
                            <tr>
                                <td>@i</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="next_button">
        <OldButton @onclick="NextProblem">Przejdź Dalej</OldButton>
    </div>
</div>

@code {
    ConvexHullOutput? _outputData;

    protected override async Task OnInitializedAsync()
    {
        if (ProblemState is not null)
        {
        _outputData = await ProblemState.GetProblemOutputData<ConvexHullOutput>();
        var inputData = await ProblemState.GetProblemInputData<FenceTransportInputData>();
        inputData.ConvexHullOutput = _outputData;
        await ProblemState.SetProblemInputData(inputData);
        }
    }
    private void NextProblem()
    {
        Navigation.NavigateTo("fence_transport");
    }
}