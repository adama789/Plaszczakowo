@page "/convex_hull_output"
@using Problem.FenceTransport
@using States
@inherits ProblemOutputBase<ConvexHullOutput>

@inject NavigationManager Navigation

<h2>Indeksy otoczki wypukłej:</h2>
<table>
    <thead>
        <tr>
            <th>Indeks</th>
        </tr>
    </thead>
    <tbody>
        @if (_outputData is not null && _outputData.HullIndexes is not null)
        {
            @foreach (var i in _outputData.HullIndexes)
            {
                <tr>
                    <td>@i</td>
                </tr>
            }
        }
    </tbody>
</table>
<OldButton @onclick="NextProblem">Następny problem</OldButton>

@code {
    ConvexHullOutput? _outputData;

    protected override async Task OnInitializedAsync()
    {
        if (ProblemState is not null)
        {
        _outputData = await ProblemState.GetProblemOutputData<ConvexHullOutput>();
        var inputData = await ProblemState.GetProblemInputData<FenceTransportInputData>();
        inputData.ConvexHullOutput = _outputData;
        await ProblemState.SetProblemInputData(inputData);
        }
    }
    private void NextProblem()
    {
        Navigation.NavigateTo("fence_transport");
    }
}