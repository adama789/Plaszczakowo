@page "/guard_schedule"
@rendermode InteractiveServer
@using GraphDrawer;
@using Problem.GuardSchedule;

<h1>Grafik strażników</h1>
<!--<img @ref="GraphEdge_image" hidden id="GraphEdge_image" src="test.png" />-->

<BECanvas Width="1280" Height="720" @ref="_canvasReference"></BECanvas>


@code {
    private GuardScheduleResolver resolver = new();
    private Canvas2DContext? _context;
    private GraphDrawer? graph;
    protected BECanvasComponent? _canvasReference;
    ElementReference GraphEdge_image;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        this._context = await this._canvasReference.CreateCanvas2DAsync();

        List<Plaszczak> plaszczaki = new();
        List<int> vertices = new();

        for (int i = 0; i < 15; i++)
        {
            plaszczaki.Add(new Plaszczak(30));
            vertices.Add(i / 2);
        }

        Pathway path = new(vertices, 3);

        GuardScheduleInputData data = new(plaszczaki, path);

        resolver.Resolve(data);
    }
}