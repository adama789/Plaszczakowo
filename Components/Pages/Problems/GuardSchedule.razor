@page "/guard_schedule"
@using Problem.GuardSchedule
@inherits ProblemComponentBase<GuardScheduleInputData, GuardScheduleOutput, Drawer.GraphDrawer.GraphData>

@if (Executor is not null)
{
    <GraphVisualizer Snapshots="Executor.GetSnapshots()" />
}

@code {

    protected override void UpdateInputData()
    {
        foreach(var vertex in InputData.Vertices)
        {
            vertex.Value = Random.Shared.Next() % 21;
        }
        
        InputData.Plaszczaki = [];
        
        for (int i = 0; i < 30; i++)
            InputData.Plaszczaki.Add(new Plaszczak(40));
    }

    protected override void InitializeResolver()
    {
        Resolver = new GuardScheduleResolver();
    }
    
    protected override void InitializeFirstSnapshotCreator(GuardScheduleInputData inputData)
    {
        FirstSnapshotCreator = new FirstGuardScheduleSnapshotCreator(inputData);
    }

}