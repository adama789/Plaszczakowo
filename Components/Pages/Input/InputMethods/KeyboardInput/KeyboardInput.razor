@page "/input/keyboard/{ProblemName}"

@using Plaszczakowo.Components.Pages.Input.InputMethods.KeyboardInput.Validator
@using Plaszczakowo.Problems.PhraseCorrection.Input
@using Plaszczakowo.States

@inherits InputMethodBase;
@inject NavigationManager Navigator;
@inject IProblemState ProblemState;

<ReturnButton ButtonPosition="HangingButton.HangingButtonPosition.Right"></ReturnButton>
<div class="keyboard_input">
    <WoodenTitle>Wprowad≈∫ tekst z klawiatury</WoodenTitle>
    
    <div class="keyboard_input__input">
        <textarea @bind="_inputText"></textarea>
        <OldButton @onclick="GoToProblemPage">Wczytaj</OldButton>
    </div>
    
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    private string _inputText = "";
        
    private PhraseCorrectionInputData PrepareInputData()
    {
        return new PhraseCorrectionInputData(_inputText.ToLower());
    }

    private void GoToProblemPage()
    {
        var input = PrepareInputData();
        var errors = KeyboardInputValidator.Validate(_inputText);
        if (errors.Count > 0)
        {
            ShowValidatorErrorModal(errors);
            return;
        }
        ProblemState.SetProblemInputData(input);
        Navigator.NavigateTo($"/{ProblemName}");
    }
    
    private void ShowValidatorErrorModal(List<KeyboardInputError> errors)
    {
        var parameters = new ModalParameters().Add(nameof(KeyboardValidatorErrorsModal.Errors), errors);
        Modal.Show<KeyboardValidatorErrorsModal>("", parameters, new ModalOptions() { Size = ModalSize.Medium });
    }

}